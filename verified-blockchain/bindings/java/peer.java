/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class peer {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected peer(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(peer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        verifiedJNI.delete_peer(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public int signup(SWIGTYPE_p_std__string arg0, SWIGTYPE_p_std__string arg1) {
    return verifiedJNI.peer_signup(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(arg0), SWIGTYPE_p_std__string.getCPtr(arg1));
  }

  public SWIGTYPE_p_std__string signin(SWIGTYPE_p_std__string arg0, SWIGTYPE_p_std__string arg1) {
    return new SWIGTYPE_p_std__string(verifiedJNI.peer_signin(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(arg0), SWIGTYPE_p_std__string.getCPtr(arg1)), true);
  }

  public int signout() {
    return verifiedJNI.peer_signout(swigCPtr, this);
  }

  public peer() {
    this(verifiedJNI.new_peer(), true);
  }

}
